{"version":3,"sources":["config.ts","redux-thunk/applicationState/applicationState.ts","redux-thunk/auth/userReducer.ts","redux-thunk/candidates/candidateReducer.ts","redux-thunk/job/jobReducer.ts","redux-thunk/recruiters/recruiterReducer.ts","redux/rootReducer.ts","redux/index.ts","utils/RouteConstant.ts","components/Breadcrumb/index.tsx","components/JobCard/index.tsx","components/Avatar/index.tsx","components/Header/index.tsx","components/Layout/index.tsx","components/Title/index.tsx","redux-thunk/endpointsConstants.ts","redux-thunk/candidates/thunk/alreadyAppliedJobsThunk.ts","screens/AppliedJobs/index.tsx","components/UserCard/index.tsx","redux-thunk/candidates/thunk/getAvailableJobsThunk.ts","redux-thunk/candidates/thunk/applyForJobThunk.ts","redux-thunk/recruiters/thunk/getPostedJobsThunk.ts","redux-thunk/recruiters/thunk/getSingleJobCandidateThunk.ts","screens/Dashboard/index.tsx","components/Input/index.tsx","redux-thunk/auth/thunk/getResetPasswordTokenThunk.ts","screens/ForgetPassword/index.tsx","assets/images/girl-using-laptop.png","components/WhiteCard/index.tsx","screens/Home/index.tsx","redux-thunk/auth/thunk/performLoginThunk.ts","screens/Login/index.tsx","redux-thunk/job/thunk/createJobThunk.ts","screens/PostAJob/index.tsx","redux-thunk/auth/thunk/performRegsiterationThunk.ts","screens/Register/index.tsx","redux-thunk/auth/thunk/changePasswordThunk.ts","redux-thunk/auth/thunk/verifyPasswordTokenThunk.ts","screens/ResetPassword/index.tsx","screens/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/JobCard/jobcard.module.scss"],"names":["config","baseUrl","InitialState$state","isLoggedIn","role","setLoggedInState","flag","type","payload","setRole","InitialState$user","createdAt","email","id","name","skills","updatedAt","userRole","token","setUser","user","InitialState$candidate","availableJobs","appliedJobs","InitialState$job","jobList","selectedJob","InitialState$recuiter","postedJobs","candiatesForSelectedJob","selectedJobId","rootReducer","combineReducers","appState","state","job","recuiter","candidate","store","createStore","applyMiddleware","thunk","withExtraArgument","endPointBase","subscribe","RouteConstant","home","dashboard","login","register","forgetPassword","resetPassword","postAJob","Breadcrumb","pathname","useLocation","className","to","JobCard","data","title","description","location","onClick","styles","cardShadow","bind","Avatar","str","Header","history","useHistory","dispatch","useDispatch","inAuthScreen","useSelector","activeClassName","push","style","borderTopColor","Layout","children","high","height","Title","EndpointConstants","changePassword","verifyResetToken","create","delete","fetchAll","fetchOne","alreadyAppliedJobs","apply","getAvailableJobs","getCandidates","alreadyAppliedJobsThunk","dispatchThunk","getStates","a","Axios","get","headers","Authorization","success","Error","message","AppliedJobScreen","useState","isloading","setIsLoading","useEffect","then","catch","err","alert","length","map","idx","UserCard","borderColor","borderWidth","getAvailableJobsThunk","applyForJobThunk","jobId","post","getPostedJobsThunk","getSingleJobCandidateThunk","DashboardScreen","viewApplicatsFor","setViewApplicantsFor","_","take","Input","value","onChange","label","placeholder","isTouched","errorMessage","isValid","extra","event","target","getResetPasswordTokenThunk","params","ForgotPasswordScreen","validator","isEmail","setEmail","propsToPass","useCallback","input","setter","ps","WhiteCard","content","HomeScreen","src","girlImage","alt","cardContent","key","performLoginThunk","password","Promise","all","LoginScreen","setPassword","isLoading","onLogin","createJobThunk","PostAJobScreen","onPost","performRegsiterationThunk","confirmPassword","RegisterScreen","setName","setConfirmPassword","setSkills","changePasswordThunk","verifyPasswordTokenThunk","ResetPasswordScreen","useParams","isVerified","setIsVerified","setIsValid","finally","error","EntryPoint","path","exact","strict","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.be6b4208.chunk.js","sourcesContent":["const config: Record<string, any> = {\n  baseUrl:'https://jobs-api.squareboat.info/api/v1',\n};\n\nexport default config;\n","import { CustomAction } from \"../type\";\n\n\nconst InitialState$state: ReducerStateType$state = {\n  isLoggedIn: false,\n  role: null,\n};\n\ntype actionKeys$applicationState = \"set-loggedin-state\" | \"set-role\";\n\nfunction reducer$applicationState(\n  state = InitialState$state,\n  { type, payload }: CustomAction<actionKeys$applicationState>\n): ReducerStateType$state {\n  switch (type) {\n    case \"set-loggedin-state\":\n      return {\n        ...state,\n        isLoggedIn: payload as boolean,\n      };\n    case \"set-role\":\n      return {\n        ...state,\n        role: payload as \"candidate\" | \"recruiter\" | null,\n      };\n    default:\n      return state;\n  }\n}\n\nconst setLoggedInState: (\n  flag: boolean\n) => CustomAction<actionKeys$applicationState> = (flag) => ({\n  type: \"set-loggedin-state\",\n  payload: flag,\n});\n\nconst setRole: (\n  role: \"candidate\" | \"recruiter\" | null\n) => CustomAction<actionKeys$applicationState> = (role) => ({\n  type: \"set-role\",\n  payload: role,\n});\n\nexport { reducer$applicationState, setLoggedInState, setRole };\n","import { CustomAction } from \"../type\";\n\nconst InitialState$user: ReducerStateType$user = {\n  createdAt: \"\",\n  email: \"\",\n  id: \"\",\n  name: \"\",\n  skills: \"\",\n  updatedAt: \"\",\n  userRole: 0,\n  token: \"\",\n};\n\ntype actionKeys$user = \"set-user\" | \"reset-user\";\n\nfunction reducer$user(\n  state = InitialState$user,\n  { type, payload }: CustomAction<actionKeys$user>\n): ReducerStateType$user {\n  switch (type) {\n    case \"reset-user\":\n      return { ...InitialState$user };\n    case \"set-user\":\n      return {\n        ...state,\n        ...(payload as User),\n      };\n    default:\n      return state;\n  }\n}\n\nconst setUser: (user: User) => CustomAction<actionKeys$user> = (user) => ({\n  type: \"set-user\",\n  payload: user,\n});\n\nconst resetUser: () => CustomAction<actionKeys$user> = () => ({\n  type: \"reset-user\",\n  payload: null,\n});\n\nexport { reducer$user, setUser, resetUser };\n","import { CustomAction } from \"../type\";\n\nconst InitialState$candidate: ReducerStateType$candidate = {\n  availableJobs: [],\n  appliedJobs: [],\n};\n\ntype actionKeys$candidate =\n  | \"set-job-list\"\n  | \"set-applied-job-list\"\n  | \"add-new-in-job-list\"\n  | \"clear-job-list\";\n\nfunction reducer$candidate(\n  state = InitialState$candidate,\n  { type, payload }: CustomAction<actionKeys$candidate>\n): ReducerStateType$candidate {\n  switch (type) {\n    case \"set-job-list\":\n      return {\n        ...state,\n        availableJobs: payload as Job[],\n      };\n    case \"add-new-in-job-list\":\n      return {\n        ...state,\n        availableJobs: [...state.availableJobs, ...(payload as Job[])],\n      };\n    case \"clear-job-list\":\n      return {\n        ...state,\n        availableJobs: [],\n      };\n    case \"set-applied-job-list\":\n      return {\n        ...state,\n        appliedJobs: payload as Job[],\n      };\n    default:\n      return state;\n  }\n}\n\nconst setAvailableJobList: (\n  joblist: Job[]\n) => CustomAction<actionKeys$candidate> = (joblist) => ({\n  type: \"set-job-list\",\n  payload: joblist,\n});\n\nconst addNewAvailableJobsInList: (\n  joblist: Job[]\n) => CustomAction<actionKeys$candidate> = (joblist) => ({\n  type: \"add-new-in-job-list\",\n  payload: joblist,\n});\n\nconst clearAvailableJobList: () => CustomAction<actionKeys$candidate> = () => ({\n  type: \"clear-job-list\",\n  payload: null,\n});\n\nconst setAppliedAvailableJobList: (\n  joblist: Job[]\n) => CustomAction<actionKeys$candidate> = (joblist) => ({\n  type: \"set-applied-job-list\",\n  payload: joblist,\n});\n\n\n\nexport {\n  reducer$candidate,\n  setAvailableJobList,\n  addNewAvailableJobsInList,\n  clearAvailableJobList,\n  setAppliedAvailableJobList\n};\n","import { CustomAction } from \"../type\";\n\nconst InitialState$job: ReducerStateType$job = {\n  jobList: [],\n  selectedJob: null,\n};\n\ntype actionKeys$job =\n  | \"set-selected-job\"\n  | \"set-job-list\"\n  | \"add-new-in-job-list\"\n  | \"clear-job-list\";\n\nfunction reducer$job(\n  state = InitialState$job,\n  { type, payload }: CustomAction<actionKeys$job>\n): ReducerStateType$job {\n  switch (type) {\n    case \"set-selected-job\":\n      return {\n        ...state,\n        selectedJob: payload as Job,\n      };\n    case \"set-job-list\":\n      return {\n        ...state,\n        jobList: payload as Job[],\n      };\n    case \"add-new-in-job-list\":\n      return {\n        ...state,\n        jobList: [...state.jobList, ...(payload as Job[])],\n      };\n    case \"clear-job-list\":\n      return {\n        ...state,\n        jobList: [],\n      };\n    default:\n      return state;\n  }\n}\n\nconst setSelectedJob: (job: Job) => CustomAction<actionKeys$job> = (job) => ({\n  type: \"set-selected-job\",\n  payload: job,\n});\n\nconst setJobList: (joblist: Job[]) => CustomAction<actionKeys$job> = (\n  joblist\n) => ({\n  type: \"set-job-list\",\n  payload: joblist,\n});\n\nconst addNewJobsInList: (joblist: Job[]) => CustomAction<actionKeys$job> = (\n  joblist\n) => ({\n  type: \"add-new-in-job-list\",\n  payload: joblist,\n});\n\nconst clearJobList: () => CustomAction<actionKeys$job> = () => ({\n  type: \"clear-job-list\",\n  payload: null,\n});\n\nexport {\n  reducer$job,\n  setSelectedJob,\n  setJobList,\n  addNewJobsInList,\n  clearJobList,\n};\n","import { CustomAction } from \"../type\";\n\nconst InitialState$recuiter: ReducerStateType$recuiter = {\n  postedJobs: [],\n  candiatesForSelectedJob: [],\n  selectedJobId: \"\",\n};\n\ntype actionKeys$recuiter =\n  | \"add-new-posted-job\"\n  | \"set-posted-job-list\"\n  | \"set-candidate-list\"\n  | \"set-selected-job-id\";\n\nfunction reducer$recuiter(\n  state = InitialState$recuiter,\n  { type, payload }: CustomAction<actionKeys$recuiter>\n): ReducerStateType$recuiter {\n  switch (type) {\n    case \"add-new-posted-job\":\n      return {\n        ...state,\n        postedJobs: [...state.postedJobs, payload as Job],\n      };\n    case \"set-posted-job-list\":\n      return {\n        ...state,\n        postedJobs: [...(payload as Job[])],\n      };\n    case \"set-candidate-list\":\n      return {\n        ...state,\n        candiatesForSelectedJob: payload as User[],\n      };\n    case \"set-selected-job-id\":\n      return {\n        ...state,\n        selectedJobId: payload as string,\n      };\n    default:\n      return state;\n  }\n}\n\nconst addNewPostedJob: (job: Job) => CustomAction<actionKeys$recuiter> = (\n  job\n) => ({\n  type: \"add-new-posted-job\",\n  payload: job,\n});\n\nconst setPostedJobList: (\n  joblist: Job[]\n) => CustomAction<actionKeys$recuiter> = (joblist) => ({\n  type: \"set-posted-job-list\",\n  payload: joblist,\n});\n\nconst setAppliedCandiatedList: (\n  userlist: User[]\n) => CustomAction<actionKeys$recuiter> = (userlist) => ({\n  type: \"set-candidate-list\",\n  payload: userlist,\n});\n\nexport { reducer$recuiter, addNewPostedJob, setPostedJobList,setAppliedCandiatedList };\n","import { combineReducers } from \"redux\";\nimport { reducer$applicationState } from \"../redux-thunk/applicationState/applicationState\";\nimport { reducer$user } from \"../redux-thunk/auth/userReducer\";\nimport { reducer$candidate } from \"../redux-thunk/candidates/candidateReducer\";\nimport { reducer$job } from \"../redux-thunk/job/jobReducer\";\nimport { reducer$recuiter } from \"../redux-thunk/recruiters/recruiterReducer\";\n\nconst rootReducer = combineReducers({\n  appState: reducer$applicationState,\n  user: reducer$user,\n  job: reducer$job,\n  recuiter: reducer$recuiter,\n  candidate:reducer$candidate\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport config from \"../config\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunk.withExtraArgument({\n      endPointBase: config.baseUrl,\n    } as ExtraThunkArguments)\n  )\n);\n\nstore.subscribe(() => {\n  // console.log(JSON.stringify(store.getState(), null, 2));\n});\n\nexport default store;\n","type RouteKeys =\n  | \"home\"\n  | \"dashboard\"\n  | \"login\"\n  | \"register\"\n  | \"forgetPassword\"\n  | \"resetPassword\"\n  | \"postAJob\"\n  | \"appliedJobs\";\nconst RouteConstant: Record<RouteKeys, string> = {\n  home: \"/\",\n  dashboard: \"/dashboard\",\n  login: \"/login\",\n  register: \"/register\",\n  forgetPassword: \"/forget-password\",\n  resetPassword: \"/reset-password\",\n  postAJob: \"/post-a-job\",\n  appliedJobs: \"/applied-jobs\",\n};\n\nexport default RouteConstant;\n","import { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport RouteConstant from \"../../utils/RouteConstant\";\n\nconst Breadcrumb = () => {\n  const { pathname } = useLocation();\n  return (\n    <div className=\"flex flex-row text-white text-xs font-normal py-4 \">\n      <Link to={RouteConstant.dashboard} className=\"mr-2 hover:underline\">\n        Home\n      </Link>\n      {pathname === RouteConstant.postAJob && (\n        <span className=\"mr-2\">\n          {\">  \"}\n          <Link to={RouteConstant.postAJob} className=\"hover:underline\">\n            Post a Job\n          </Link>\n        </span>\n      )}\n      {pathname === RouteConstant.appliedJobs && (\n        <span className=\"mr-2\">\n          {\">  \"} <Link to={RouteConstant.appliedJobs}>Applied Jobs</Link>\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Breadcrumb;\n","import { FC } from \"react\";\nimport styles from \"./jobcard.module.scss\";\nconst JobCard: FC<JobCardProps> = ({\n  data: { title, description, location, id },\n  role,\n  onClick,\n}) => (\n  <div className={styles.cardShadow}>\n    <h3 className={styles.title}>{title}</h3>\n    <p className=\"p-0 m-0 secondary pb-4 text-sm mb-2 flex-1 overflow-clip overflow-hidden\">\n      {description} Lorem ipsum dolor sit, amet consectetur adipisicing elit.\n      Temporibus odit modi, facilis vel hic tenetur ipsa vero itaque sunt culpa\n      earum commodi deleniti veniam fugit adipisci neque fugiat impedit. Ipsam?\n    </p>\n    <div className=\"flex flex-row items-center justify-start\">\n      <p className=\"p-0 m-0 secondary  text-sm flex-1 font-normal\">\n        {location}\n      </p>\n      {role === \"recruiter\" && onClick && id && (\n        <button\n          onClick={onClick.bind({}, id)}\n          className=\"light-highlighted-button\"\n        >\n          View Application\n        </button>\n      )}\n      {role === \"candidate\" && onClick && id && (\n        <button\n          onClick={onClick.bind({}, id)}\n          className=\"light-highlighted-button\"\n        >\n          Apply\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport { JobCard };\n","import React, { FC } from \"react\";\n\nconst Avatar: FC<AvatarProps> = ({ str }) => (\n  <div className=\"mx-2 uppercase bg-blue-300 focus:outline-none rounded-full w-12 h-12 min-w-max flex items-center justify-center\">\n    {str[0]}\n  </div>\n);\n\nexport { Avatar };\n","import React, { FC } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, Router, useHistory, useLocation } from \"react-router-dom\";\nimport { setLoggedInState } from \"../../redux-thunk/applicationState/applicationState\";\nimport { resetUser, setUser } from \"../../redux-thunk/auth/userReducer\";\nimport RouteConstant from \"../../utils/RouteConstant\";\nimport { Avatar } from \"../Avatar\";\nimport \"./header.scss\";\n\nconst Header: FC<HeaderProps> = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n  const inAuthScreen =\n    pathname === RouteConstant.login ||\n    pathname === RouteConstant.register ||\n    pathname === RouteConstant.forgetPassword ||\n    pathname === RouteConstant.resetPassword;\n\n  const { isLoggedIn, role } = useSelector(\n    (state: RootState) => state.appState\n  );\n  const { name } = useSelector((state: RootState) => state.user);\n\n  return (\n    <>\n      <div className=\"flex h-20 py-0 items-stretch justify-between w-full\">\n        <h2 className=\"header-title\">\n          <span className=\"text-white\">My</span>\n          <span className=\"primary\">Jobs</span>\n        </h2>\n        {isLoggedIn ? (\n          <div className=\"flex\">\n            {role === \"recruiter\" && (\n              <NavLink\n                activeClassName=\"border-blue-400\"\n                to={RouteConstant.postAJob}\n                className=\"secondary  mx-4 px-3 border-transparent border-b-2 flex items-center justify-center\"\n              >\n                <p className=\"p-0 m-0 text-white font-normal\">Post a Job</p>\n              </NavLink>\n            )}\n            {role === \"candidate\" && (\n              <NavLink\n                activeClassName=\"border-blue-400\"\n                to={RouteConstant.appliedJobs}\n                className=\"secondary  mx-4 px-3 border-transparent border-b-2 flex items-center justify-center\"\n              >\n                <p className=\"p-0 m-0 text-white font-normal\">Applied Jobs</p>\n              </NavLink>\n            )}\n\n            <button\n              onClick={() => {\n                dispatch(resetUser());\n                dispatch(setLoggedInState(false));\n                history.push(RouteConstant.login);\n                \n              }}\n              className=\"flex items-center\"\n            >\n              <Avatar str={name} />\n              <div\n                className=\"border-8 border-transparent mt-3\"\n                style={{ borderTopColor: \"white\" }}\n              />\n            </button>\n          </div>\n        ) : (\n          !inAuthScreen && (\n            <div className=\"flex py-3 justify-center items-center\">\n              <button\n                className=\"inset-button p-10\"\n                onClick={() => history.push(RouteConstant.login)}\n              >\n                <p>Login/Signup</p>\n              </button>\n            </div>\n          )\n        )}\n      </div>\n      <div className=\"bg-white h-px opacity-30\" />\n    </>\n  );\n};\n\nexport default Header;\n","import React, { FC } from \"react\";\nimport Header from \"../Header\";\nimport \"./layout.scss\";\n\nconst Layout: FC<LayoutProps> = ({ children, high=true }) => {\n  return (\n    <div className=\"min-h-screen w-screen relative p-0 base z-0\">\n      <div className=\"w-screen base-layer absolute left-0 top-0 z-0 shadow-sm\" style={{height:high?\"46%\":210}}></div>\n      <div className={`max-w-7xl h-full z-0 relative m-auto`}>\n        <Header />\n        <div className=\"fixed-box\">\n\n        {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { FC } from \"react\";\n\nconst Title: FC<TitleProps> = ({ title, type = \"dark\" }) => (\n  <h4\n    className={`capitalize font-semibold text-2xl my-3 ${\n      type === \"dark\" ? \"secondary\" : \"\"\n    } ${type === \"light\" ? \"text-white\" : \"\"}`}\n  >\n    {title}\n  </h4>\n);\n\nexport { Title };\n","type AuthEndpointKeys =\n  | \"login\"\n  | \"register\"\n  | \"resetPassword\"\n  | \"verifyResetToken\"\n  | \"changePassword\";\ntype JobEndpointKeys = \"create\" | \"fetchOne\" | \"fetchAll\" | \"delete\";\ntype CandidateEndpointKeys =\n  | \"apply\"\n  | \"getAvailableJobs\"\n  | \"alreadyAppliedJobs\";\ntype RecruiterEndpointKeys = \"postedJobs\" | \"getCandidates\";\n\nexport const EndpointConstants: {\n  auth: Record<AuthEndpointKeys, string>;\n  jobs: Record<JobEndpointKeys, string>;\n  candidates: Record<CandidateEndpointKeys, string>;\n  recruiters: Record<RecruiterEndpointKeys, string>;\n} = {\n  auth: {\n    login: \"/auth/login\",\n    changePassword: \"/auth/resetpassword\",\n    register: \"/auth/register\",\n    resetPassword: \"/auth/resetpassword\",\n    verifyResetToken: \"/auth/resetpassword\",\n  },\n  jobs: {\n    create: \"/jobs\",\n    delete: \"/jobs\",\n    fetchAll: \"/jobs\",\n    fetchOne: \"/jobs\",\n  },\n  candidates: {\n    alreadyAppliedJobs: \"/candidates/jobs/applied\",\n    apply: \"/candidates/jobs\",\n    getAvailableJobs: \"//candidates/jobs\",\n  },\n  recruiters: {\n    postedJobs: \"/recruiters/jobs\",\n    getCandidates:\n      \"/recruiters/jobs\",\n  },\n};\n","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\nimport { setAppliedAvailableJobList } from \"../candidateReducer\";\n\nfunction alreadyAppliedJobsThunk(): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { token } = getStates().user;\n\n    const { data } = await Axios.get<\n      unknown,\n      AxiosResponse<ApiResponse<Job[]>>\n    >(`${endPointBase}${EndpointConstants.candidates.alreadyAppliedJobs}`, {\n      headers: {\n        Authorization: token,\n      },\n    });\n    if (!data.success || !data.data) {\n      throw new Error(data.message);\n    }\n    dispatchThunk(setAppliedAvailableJobList(data.data));\n    return data;\n  };\n}\nexport default alreadyAppliedJobsThunk;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Action } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport Breadcrumb from \"../../components/Breadcrumb\";\nimport { JobCard } from \"../../components/JobCard\";\nimport Layout from \"../../components/Layout\";\nimport { Title } from \"../../components/Title\";\nimport alreadyAppliedJobsThunk from \"../../redux-thunk/candidates/thunk/alreadyAppliedJobsThunk\";\n\nconst AppliedJobScreen = () => {\n  const { isLoggedIn, role } = useSelector(\n    (state: RootState) => state.appState\n  );\n  const { appliedJobs } = useSelector((state: RootState) => state.candidate);\n  const [isloading, setIsLoading] = useState(false);\n  const dispatch = useDispatch<\n    ThunkDispatch<RootState, ExtraThunkArguments, Action<any>>\n  >();\n  useEffect(() => {\n    setIsLoading(true);\n    if (role === \"candidate\") {\n      dispatch(alreadyAppliedJobsThunk())\n        .then((data) => {\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          alert(err.message)\n          setIsLoading(false);\n        });\n    }\n  }, [dispatch, role]);\n\n  if (role !== \"candidate\" || !isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <Layout>\n        <Breadcrumb />\n        <Title type=\"light\" title=\"Jobs posted by you\" />\n        {isloading ? (\n          <Title type=\"dark\" title=\"Loading...\" />\n        ) : appliedJobs.length > 0 ? (\n          <div className=\"grid grid-flow-row grid-cols-4 grid-rows-3 gap-10 place-items-stretch items-stretch \">\n            {appliedJobs.map((job, idx) => (\n              <JobCard role=\"candidate\" key={idx} data={job} />\n            ))}\n          </div>\n        ) : (\n          <Title type=\"light\" title=\"No Posted Jobs\" />\n        )}\n      </Layout>\n    );\n  }\n};\n\nexport default AppliedJobScreen;\n","import { FC } from \"react\";\nimport { Avatar } from \"../Avatar\";\n\nconst UserCard: FC<{ data: User }> = ({\n  data: { name, email, skills },\n}) => (\n  <div\n    className=\"bg-white rounded-md p-3\"\n    style={{ borderColor: \"#303F6080\", borderWidth: 1 }}\n  >\n    <div className=\"flex flex-row mb-6\">\n      <div>\n        <Avatar str={name} />\n      </div>\n      <div className=\"flex-1 flex flex-col items-stretch justify-start\">\n        <p className=\"flex-1 secondary font-bold\">{name}</p>\n        <p className=\"flex-1 w-full secondary \">{email}</p>\n      </div>\n    </div>\n    <p className=\"p-0 m-0 secondary font-semibold text-xs\">Skills</p>\n    <p className=\"p-0 m-0 secondary pb-4 text-sm \">{skills}</p>\n  </div>\n);\n\nexport default UserCard;","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\nimport { setAvailableJobList } from \"../candidateReducer\";\n\nfunction getAvailableJobsThunk(): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { token } = getStates().user;\n    const { data } = await Axios.get<\n      unknown,\n      AxiosResponse<\n        ApiResponse<Job[]>\n      >\n    >(`${endPointBase}${EndpointConstants.candidates.getAvailableJobs}/`,{\n      headers: {\n        Authorization: token,\n      },\n\n    });\n    if (!data.success || !data.data) {\n      throw new Error(data.message);\n    }\n    dispatchThunk(setAvailableJobList(data.data))\n    return data;\n  };\n}\nexport default getAvailableJobsThunk;\n","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\nimport getAvailableJobsThunk from \"./getAvailableJobsThunk\";\n\nfunction applyForJobThunk({ jobId }: { jobId: string }): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { token } = getStates().user;\n\n    const { data } = await Axios.post<\n      unknown,\n      AxiosResponse<ApiResponse<User>>\n    >(\n      `${endPointBase}${EndpointConstants.candidates.apply}/`,\n      {\n        jobId,\n      },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n    if (!data.success) {\n      throw new Error(data.message);\n    }\n    dispatchThunk(getAvailableJobsThunk());\n    return data;\n  };\n}\nexport default applyForJobThunk;\n","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\nimport { setPostedJobList } from \"../recruiterReducer\";\n\nfunction getPostedJobsThunk(): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { token } = getStates().user;\n    const { data } = await Axios.get<\n      unknown,\n      AxiosResponse<\n        ApiResponse<{\n          data: Job[];\n          metadata: {\n            count: number;\n            limit: number;\n          };\n        }>\n      >\n    >(`${endPointBase}${EndpointConstants.recruiters.postedJobs}`, {\n      headers: {\n        Authorization: token,\n      },\n    });\n    if (!data.success) {\n      throw new Error(data.message);\n    }\n    dispatchThunk(setPostedJobList(data.data ? data.data.data : []));\n    return data.data ? data.data.data : [];\n  };\n}\nexport default getPostedJobsThunk;\n","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\nimport { setAppliedCandiatedList } from \"../recruiterReducer\";\n\nfunction getSingleJobCandidateThunk({\n  jobId,\n}: {\n  jobId: string;\n}): CustomThunk<User[]> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { token } = getStates().user;\n    const { data } = await Axios.get<\n      unknown,\n      AxiosResponse<ApiResponse<User[]>>\n    >(\n      `${endPointBase}${EndpointConstants.recruiters.getCandidates}/${jobId}/candidates`,\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n    if (!data.success || !data.data) {\n      throw new Error(data.message);\n    }\n    dispatchThunk(setAppliedCandiatedList(data.data));\n    return data.data;\n  };\n}\nexport default getSingleJobCandidateThunk;\n","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Action } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport Breadcrumb from \"../../components/Breadcrumb\";\nimport { JobCard } from \"../../components/JobCard\";\nimport Layout from \"../../components/Layout\";\nimport { Title } from \"../../components/Title\";\nimport UserCard from \"../../components/UserCard\";\nimport applyForJobThunk from \"../../redux-thunk/candidates/thunk/applyForJobThunk\";\nimport getAvailableJobsThunk from \"../../redux-thunk/candidates/thunk/getAvailableJobsThunk\";\nimport getPostedJobsThunk from \"../../redux-thunk/recruiters/thunk/getPostedJobsThunk\";\nimport getSingleJobCandidateThunk from \"../../redux-thunk/recruiters/thunk/getSingleJobCandidateThunk\";\nconst DashboardScreen = () => {\n  const { isLoggedIn, role } = useSelector(\n    (state: RootState) => state.appState\n  );\n  const { postedJobs, candiatesForSelectedJob } = useSelector(\n    (state: RootState) => state.recuiter\n  );\n  const { availableJobs } = useSelector((state: RootState) => state.candidate);\n\n  const [, setIsLoading] = useState(false);\n  const dispatch = useDispatch<\n    ThunkDispatch<RootState, ExtraThunkArguments, Action<any>>\n  >();\n\n  const [viewApplicatsFor, setViewApplicantsFor] = useState(\"\");\n  useEffect(() => {\n    setIsLoading(true);\n    if (role === \"recruiter\") {\n      dispatch(getPostedJobsThunk()).catch((err) => alert(err.message));\n    } else if (role === \"candidate\") {\n      dispatch(getAvailableJobsThunk()).catch((err) => alert(err.message));\n    }\n  }, [dispatch, role]);\n  if (!role || !isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n  if (role === \"recruiter\") {\n    return (\n      <Layout high={false}>\n        <Breadcrumb />\n        <Title type=\"light\" title=\"Jobs posted by you\" />\n\n        {postedJobs.length > 0 ? (\n          <div className=\"grid grid-flow-row grid-cols-4 grid-rows-3 gap-10 place-items-stretch items-stretch \">\n            {_.map(\n              [\n                ...postedJobs,\n                ...postedJobs,\n                ...postedJobs,\n                ...postedJobs,\n                ...postedJobs,\n              ],\n              (job, idx) => (\n                <JobCard\n                  role=\"recruiter\"\n                  key={idx}\n                  data={job}\n                  onClick={(id) => {\n                    setViewApplicantsFor(id);\n                    dispatch(\n                      getSingleJobCandidateThunk({\n                        jobId: id,\n                      })\n                    ).catch((err) => alert(err.message));\n                  }}\n                />\n              )\n            )}\n          </div>\n        ) : (\n          <Title title=\"No Posted Jobs\" />\n        )}\n        {viewApplicatsFor && (\n          <div className=\"w-screen fixed h-screen top-0 left-0 flex items-center justify-center z-10 bg-opacity-60 bg-black\">\n            <div className=\"max-w-2xl w-full rounded-2xl p-8 bg-white  \">\n              <div className=\"flex flex-row items-center justify-between\">\n                <h4 className=\"capitalize font-semibold text-xl\">\n                  Applicants for this job\n                </h4>\n                <button onClick={() => setViewApplicantsFor(\"\")}>X</button>\n              </div>\n              <div className=\"divide-x-8 divide-black divide-double\" />\n              <div className=\"my-3.5 bg-gray-300 p-2 max-h-80 grid grid-cols-2 gap-5 rounded-md overflow-y-auto\">\n                {candiatesForSelectedJob.map((candidate, idx) => (\n                  <UserCard key={idx} data={candidate} />\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </Layout>\n    );\n  } else if (role === \"candidate\") {\n    return (\n      <>\n        <Layout>\n          <Breadcrumb />\n          <Title type=\"light\" title=\"Jobs applied by you\" />\n          {availableJobs.length > 0 ? (\n            <div className=\"grid grid-flow-row grid-cols-4 grid-rows-3 gap-10 place-items-stretch items-stretch \">\n              {_.map(_.take(availableJobs, 12), (job, idx) => (\n                <JobCard\n                  role=\"candidate\"\n                  key={idx}\n                  data={job}\n                  onClick={(id) => {\n                    dispatch(\n                      applyForJobThunk({\n                        jobId: id,\n                      })\n                    ).catch((err) => alert(err.message));\n                  }}\n                />\n              ))}\n            </div>\n          ) : (\n            <Title title=\"No Posted Jobs\" />\n          )}\n        </Layout>\n      </>\n    );\n  }\n  return <p>OOPS</p>;\n};\n\nexport default DashboardScreen;\n","import React, { ChangeEvent, FC } from \"react\";\n\nconst Input: FC<{\n  value: string;\n  type: \"text\" | \"password\";\n  onChange: (value: string) => void;\n  placeholder: string;\n  label: string;\n  isTouched: boolean;\n  isValid: boolean;\n  errorMessage: string;\n  extra?: React.ReactNode;\n}> = ({\n  value,\n  onChange,\n  label,\n  placeholder,\n  isTouched,\n  isValid,\n  errorMessage,\n  type = \"text\",\n  extra = null,\n}) => {\n  return (\n    <div className=\"py-3 w-full m-1\">\n      <label>\n        <div className=\"flex justify-between\">\n          <p className=\"m-0 p-0 text-base secondary\">{label}</p>\n          {extra}\n        </div>\n        <input\n          style={{ borderWidth: 1 }}\n          className={`${\n            !isTouched || !errorMessage\n              ? \"border-gray-400 focus:border-blue-400\"\n              : \"border-red-400\"\n          } rounded-sm w-full max-h-12 p-1 border-solid focus:outline-none`}\n          {...{\n            value,\n            type,\n            placeholder,\n            onChange: (event: ChangeEvent<HTMLInputElement>) =>\n              onChange(event.target.value),\n          }}\n        />\n      </label>\n      {errorMessage && (\n        <span className=\"text-red-500 text-xs\"> {errorMessage}</span>\n      )}\n    </div>\n  );\n};\n\nexport default Input;\n","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\n\nfunction getResetPasswordTokenThunk({\n  email,\n}: {\n  email: string;\n}): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { data } = await Axios.get<unknown, AxiosResponse<ApiResponse<User>>>(\n      `${endPointBase}${EndpointConstants.auth.resetPassword}`,\n      {\n        params: {\n          email,\n        },\n      }\n    );\n    if (!data.success || !data.data) {\n      throw new Error(data.message);\n    }\n    return data.data;\n  };\n}\nexport default getResetPasswordTokenThunk;\n","import { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Action } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport Input from \"../../components/Input\";\nimport Layout from \"../../components/Layout\";\nimport { Title } from \"../../components/Title\";\nimport getResetPasswordTokenThunk from \"../../redux-thunk/auth/thunk/getResetPasswordTokenThunk\";\nimport RouteConstant from \"../../utils/RouteConstant\";\nimport validator from \"validator\";\n\nconst ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) =>\n      validator.isEmail(value) ? \"\" : \"Please enter a valid email\",\n  });\n  const propsToPass = useCallback(\n    (\n      input: InputObject,\n      setter: React.Dispatch<React.SetStateAction<InputObject>>\n    ) => ({\n      value: input.value,\n      onChange: (value: string) => {\n        const errorMessage = input.validator(value);\n        setter((ps) => ({\n          ...ps,\n          value,\n          errorMessage: errorMessage,\n          isValid: !!errorMessage,\n          isTouched: true,\n        }));\n      },\n      isTouched: input.isTouched,\n      isValid: input.isValid,\n      errorMessage: input.errorMessage,\n    }),\n    []\n  );\n\n  const dispatch = useDispatch<\n    ThunkDispatch<RootState, ExtraThunkArguments, Action<any>>\n  >();\n  const history = useHistory();\n  return (\n    <Layout>\n      <div className=\"w-full flex py-60 justify-center items-center\">\n        <div className=\"max-w-xl w-full rounded-2xl p-8 bg-white shadow\">\n          <Title type=\"dark\" title=\"Forgot your password?\" />\n          <div className=\"my-3.5\" />\n          <p className=\"m-0 p-0 text-sm secondary\">\n            Enter the email associated with your account and we’ll send you\n            instructions to reset your password.\n          </p>\n          <Input\n            label=\"Email Address*\"\n            {...propsToPass(email, setEmail)}\n            placeholder=\"Enter your email\"\n            type=\"text\"\n          />\n\n          <button\n            className=\"primary-button\"\n            onClick={() =>\n              !email.validator(email.value) &&\n              dispatch(\n                getResetPasswordTokenThunk({\n                  email: email.value,\n                })\n              )\n                .then((data) => {\n                  history.push(RouteConstant.resetPassword + \"/\" + data.token);\n                })\n                .catch((err) => alert(err.message))\n            }\n          >\n            Submit\n          </button>\n          <p>\n            Have an account?\n            <Link to={RouteConstant.login} className=\"primary\">\n              Login\n            </Link>\n          </p>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ForgotPasswordScreen;\n","export default __webpack_public_path__ + \"static/media/girl-using-laptop.e3d204c2.png\";","import { FC } from \"react\";\n\nexport const WhiteCard: FC<{ title: string; content: string; }> = ({\n  title,\n  content,\n}) => (\n  <div className=\"rounded-md px-5 shadow-lg bg-white my-5 max-w-xs\">\n    <h3 className=\"primary text-2xl font-medium my-4\">{title}</h3>\n    <p className=\"p-0 m-0 secondary pb-7 text-sm\">{content}</p>\n  </div>\n);\n","import girlImage from \"../../assets/images/girl-using-laptop.png\";\nimport Layout from \"../../components/Layout\";\nimport { Title } from \"../../components/Title\";\nimport { WhiteCard } from \"../../components/WhiteCard\";\nconst HomeScreen = () => {\n  return (\n    <Layout>\n      <article className=\"px-28\">\n        <section className=\"flex items-center justify-between my-14\">\n          <div className=\"flex-1 \">\n            <h1 className=\"font-medium my-5 text-white text-6xl\">\n              <span>Welcome to My</span>\n              <span className=\"primary\">Jobs</span>\n            </h1>\n            <button className=\"primary-button\">Get Started</button>\n          </div>\n          <div className=\"max-w-2xl max-h-96 overflow-hidden rounded-2xl shadow-md\">\n            <img\n              className=\"w-full h-full\"\n              src={girlImage}\n              alt=\"girl-using-laptop\"\n            />\n          </div>\n        </section>\n        <section className=\"mb-12\">\n          <div>\n            <Title title=\"why us\" />\n          </div>\n          <div className=\"flex flex-row flex-wrap justify-between\">\n            {([\n              {\n                title: \"Get more visibility\",\n                content:\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\",\n              },\n              {\n                title: \"Organize your candidates\",\n                content:\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n              },\n              {\n                title: \"Verify their abilities\",\n                content:\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\",\n              },\n            ] as Array<{ title: string; content: string }>).map(\n              (cardContent, idx) => (\n                <WhiteCard {...cardContent} key={idx} />\n              )\n            )}\n          </div>\n        </section>\n        <section>\n          <div>\n            <Title title=\"companies who trust us\" />\n          </div>\n          <div></div>\n        </section>\n      </article>\n    </Layout>\n  );\n};\n\nexport default HomeScreen;\n","import Axios, { AxiosResponse } from \"axios\";\nimport {\n  setLoggedInState,\n  setRole,\n} from \"../../applicationState/applicationState\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\nimport { setUser } from \"../userReducer\";\n\nfunction performLoginThunk({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}): CustomThunk<User> {\n  return async function (dispatchThunk, _, { endPointBase }) {\n    const { data } = await Axios.post<User, AxiosResponse<ApiResponse<User>>>(\n      `${endPointBase}${EndpointConstants.auth.login}`,\n      {\n        email,\n        password,\n      }\n    );\n    if (!data.success || !data.data) {\n      throw new Error(data.message);\n    }\n    await Promise.all([\n      dispatchThunk(setUser(data.data)),\n      dispatchThunk(setLoggedInState(true)),\n      dispatchThunk(\n        setRole(\n          data.data.userRole === 1\n            ? \"candidate\"\n            : data.data.userRole === 0\n            ? \"recruiter\"\n            : null\n        )\n      ),\n    ]);\n    return data.data;\n  };\n}\nexport default performLoginThunk;\n","import { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Action } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport Input from \"../../components/Input\";\nimport Layout from \"../../components/Layout\";\nimport { Title } from \"../../components/Title\";\nimport performLoginThunk from \"../../redux-thunk/auth/thunk/performLoginThunk\";\nimport RouteConstant from \"../../utils/RouteConstant\";\nimport validator from \"validator\";\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) =>\n      validator.isEmail(value) ? \"\" : \"Please enter a valid email\",\n  });\n  const [password, setPassword] = useState<InputObject>({\n    value: \"\",\n    isTouched: false,\n    errorMessage: \"\",\n    isValid: true,\n    validator: (value: string) =>\n      value.length > 0 ? \"\" : \"This field is mandatory\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch<\n    ThunkDispatch<RootState, ExtraThunkArguments, Action<any>>\n  >();\n\n  const onLogin = useCallback(() => {\n    if (!email.validator(email.value) && !password.validator(password.value)) {\n      setIsLoading(true);\n      dispatch(\n        performLoginThunk({\n          email: email.value,\n          password: password.value,\n        })\n      )\n        .then(() => {\n          history.push(RouteConstant.dashboard);\n        })\n        .catch((err) => {\n          alert(err.message);\n          setIsLoading(false);\n        });\n    }\n  }, [email, password, dispatch, history]);\n  return (\n    <Layout>\n      <div className=\"w-full flex py-60 justify-center items-center\">\n        <div className=\"max-w-xl w-full rounded-2xl p-8 bg-white popup \">\n          {isLoading ? (\n            <p>Loading</p>\n          ) : (\n            <>\n              <Title title=\"Login\" />\n              <div className=\"my-3.5\" />\n              <Input\n                label=\"Email address\"\n                value={email.value}\n                onChange={(value) => {\n                  const errorMessage = email.validator(value);\n                  setEmail((ps) => ({\n                    ...ps,\n                    value,\n                    errorMessage: errorMessage,\n                    isValid: !!errorMessage,\n                    isTouched: true,\n                  }));\n                }}\n                isTouched={email.isTouched}\n                isValid={email.isValid}\n                errorMessage={email.errorMessage}\n                placeholder=\"Enter your Email\"\n                type=\"text\"\n              />\n              <Input\n                isTouched={password.isTouched}\n                label=\"Password\"\n                extra={\n                  <Link\n                    className=\"text-xs text-blue-500\"\n                    to={RouteConstant.forgetPassword}\n                  >\n                    Forgot Password\n                  </Link>\n                }\n                value={password.value}\n                onChange={(value) => {\n                  const errorMessage = password.validator(value);\n                  setPassword((ps) => ({\n                    ...ps,\n                    value,\n                    errorMessage: errorMessage,\n                    isValid: !!errorMessage,\n                    isTouched: true,\n                  }));\n                }}\n                isValid={password.isValid}\n                errorMessage={password.errorMessage}\n                placeholder=\"Enter your Password\"\n                type=\"password\"\n              />\n              <button className=\"primary-button\" onClick={onLogin}>\n                Login\n              </button>\n              <p>\n                New to My Jobs?\n                <Link to={RouteConstant.register} className=\"primary\">\n                  Create an account\n                </Link>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default LoginScreen;\n","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport getPostedJobsThunk from \"../../recruiters/thunk/getPostedJobsThunk\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\n\nfunction createJobThunk({\n  description,\n  location,\n  title,\n}: {\n  title: string;\n  description: string;\n  location: string;\n}): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { token } = getStates().user;\n\n    const { data } = await Axios.post<\n      unknown,\n      AxiosResponse<ApiResponse<unknown>>\n    >(\n      `${endPointBase}${EndpointConstants.jobs.create}`,\n      {\n        title,\n        description,\n        location,\n      },\n      {\n        headers: {\n          Authorization: token,\n        },\n      }\n    );\n    if (!data.success) {\n      throw new Error(data.message);\n    }\n    await dispatchThunk(getPostedJobsThunk());\n    return data;\n  };\n}\nexport default createJobThunk;\n","import { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Action } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport Breadcrumb from \"../../components/Breadcrumb\";\nimport Input from \"../../components/Input\";\nimport Layout from \"../../components/Layout\";\nimport { Title } from \"../../components/Title\";\nimport createJobThunk from \"../../redux-thunk/job/thunk/createJobThunk\";\nimport RouteConstant from \"../../utils/RouteConstant\";\n\nconst PostAJobScreen = () => {\n  const title = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) => (value.length > 0 ? \"\" : \"Is mandatory\"),\n  });\n  const description = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) => (value.length > 0 ? \"\" : \"Is mandatory\"),\n  });\n  const location = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) => (value.length > 0 ? \"\" : \"Is mandatory\"),\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch<\n    ThunkDispatch<RootState, ExtraThunkArguments, Action<any>>\n  >();\n\n  const onPost = useCallback(() => {\n    if (\n      !title[0].validator(title[0].value) &&\n      !description[0].validator(description[0].value) &&\n      !location[0].validator(location[0].value)\n    ) {\n      setIsLoading(true);\n      dispatch(\n        createJobThunk({\n          title: title[0].value,\n          description: description[0].value,\n          location: location[0].value,\n        })\n      )\n        .then((data) => {\n          history.push(RouteConstant.dashboard);\n        })\n        .catch((err) => {\n          alert(err.message);\n          setIsLoading(false);\n        });\n    }\n  }, [dispatch, description, title, history, location]);\n  const propsToPass = useCallback(\n    (\n      input: InputObject,\n      setter: React.Dispatch<React.SetStateAction<InputObject>>\n    ) => ({\n      value: input.value,\n      onChange: (value: string) => {\n        const errorMessage = input.validator(value);\n        setter((ps) => ({\n          ...ps,\n          value,\n          errorMessage: errorMessage,\n          isValid: !!errorMessage,\n          isTouched: true,\n        }));\n      },\n      isTouched: input.isTouched,\n      isValid: input.isValid,\n      errorMessage: input.errorMessage,\n    }),\n    []\n  );\n\n  return (\n    <Layout>\n      <div className=\"h-full w-full flex flex-col items-stretch justify-center\">\n        <Breadcrumb />\n        <div className=\"flex justify-center items-center flex-1\">\n          <div className=\"max-w-xl w-full rounded-2xl p-8 bg-white popup\">\n            {isLoading ? (\n              <p>Loading</p>\n            ) : (\n              <>\n                <Title title=\"Post a Job\" />\n                <div className=\"my-3.5\" />\n                <Input\n                  label=\"Job Title\"\n                  {...propsToPass(...title)}\n                  placeholder=\"Job Title\"\n                  type=\"text\"\n                />\n                <Input\n                  label=\"Description*\"\n                  {...propsToPass(...description)}\n                  placeholder=\"Description\"\n                  type=\"text\"\n                />\n                <Input\n                  label=\"Location*\"\n                  {...propsToPass(...location)}\n                  placeholder=\"Location\"\n                  type=\"text\"\n                />\n                <button className=\"primary-button\" onClick={onPost}>\n                  Post\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PostAJobScreen;\n","import Axios, { AxiosResponse } from \"axios\";\nimport { setLoggedInState, setRole } from \"../../applicationState/applicationState\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\nimport { setUser } from \"../userReducer\";\n\nfunction performRegsiterationThunk({\n  email,\n  password,\n  confirmPassword,\n  name,\n  skills,\n  userRole,\n}: {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  userRole: number;\n  skills: string;\n}): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    if (userRole !== 0 && userRole !== 1) {\n      throw new Error(\"Invalid User Role\");\n    }\n    const { data } = await Axios.post<\n      unknown,\n      AxiosResponse<ApiResponse<User>>\n    >(`${endPointBase}${EndpointConstants.auth.register}`, {\n      name,\n      email,\n      password,\n      confirmPassword,\n      skills,\n      userRole,\n    });\n    if (!data.success || !data.data) {\n      throw new Error(data.message);\n    }\n    await Promise.all([\n      dispatchThunk(setUser(data.data)),\n      dispatchThunk(setLoggedInState(true)),\n      dispatchThunk(\n        setRole(\n          data.data.userRole === 1\n            ? \"candidate\"\n            : data.data.userRole === 0\n            ? \"recruiter\"\n            : null\n        )\n      ),\n    ]);\n\n    return data.data;\n  };\n}\nexport default performRegsiterationThunk;\n","import { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Action } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport Input from \"../../components/Input\";\nimport Layout from \"../../components/Layout\";\nimport { Title } from \"../../components/Title\";\nimport performRegsiterationThunk from \"../../redux-thunk/auth/thunk/performRegsiterationThunk\";\nimport RouteConstant from \"../../utils/RouteConstant\";\nimport validator from \"validator\";\n\nconst RegisterScreen = () => {\n  const [email, setEmail] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) =>\n      validator.isEmail(value) ? \"\" : \"Please enter a valid email\",\n  });\n  const [name, setName] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) => (value.length > 0 ? \"\" : \"Is mandatory\"),\n  });\n  const [password, setPassword] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) => (value.length > 0 ? \"\" : \"Is mandatory\"),\n  });\n  const [role, setRole] = useState(0);\n  const [confirmPassword, setConfirmPassword] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) =>\n      value.length > 0 ? \"\" : \"Must be Same as Password\",\n  });\n  const [skills, setSkills] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) => (value.length > 0 ? \"\" : \"Is mandatory\"),\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const dispatch = useDispatch<\n    ThunkDispatch<RootState, ExtraThunkArguments, Action<any>>\n  >();\n\n  const propsToPass = useCallback(\n    (\n      input: InputObject,\n      setter: React.Dispatch<React.SetStateAction<InputObject>>\n    ) => ({\n      value: input.value,\n      onChange: (value: string) => {\n        const errorMessage = input.validator(value);\n        setter((ps) => ({\n          ...ps,\n          value,\n          errorMessage: errorMessage,\n          isValid: !!errorMessage,\n          isTouched: true,\n        }));\n      },\n      isTouched: input.isTouched,\n      isValid: input.isValid,\n      errorMessage: input.errorMessage,\n    }),\n    []\n  );\n  return (\n    <Layout>\n      <div className=\"w-full h-full flex justify-center items-center\">\n        <div className=\"max-w-xl w-full rounded-2xl p-8 bg-white popup  flex flex-col items-stretch\">\n          {isLoading ? (\n            <p>Loading</p>\n          ) : (\n            <>\n              <Title title=\"Signup\" />\n              <div className=\"py-3 w-full\">\n                <label>\n                  <p className=\"m-0 p-0 text-sm secondary\">I'm a*</p>\n                  <button\n                    className={\n                      role === 0\n                        ? \"primary-button mr-5 w-40\"\n                        : \"mr-5 border-blue-300 border-2 w-40  rounded-md p-3 bg-blue-100 secondary\"\n                    }\n                    onClick={setRole.bind({}, 0)}\n                  >\n                    Recruiter\n                  </button>\n                  <button\n                    className={\n                      role === 1\n                        ? \"primary-button mr-5 w-40\"\n                        : \"mr-5 border-blue-300 border-2 w-40  rounded-md p-3 bg-blue-100 secondary\"\n                    }\n                    onClick={setRole.bind({}, 1)}\n                  >\n                    Candidate\n                  </button>\n                </label>\n              </div>\n              <Input\n                label=\"Full Name*\"\n                {...propsToPass(name, setName)}\n                placeholder=\"Enter your full name\"\n                type=\"text\"\n              />\n              <Input\n                label=\"Email Address*\"\n                {...propsToPass(email, setEmail)}\n                placeholder=\"Enter your email\"\n                type=\"text\"\n              />\n              <div className=\"flex justify-between items-stretch\">\n                <Input\n                  label=\"Password*\"\n                  {...propsToPass(password, setPassword)}\n                  placeholder=\"Enter your email\"\n                  type=\"password\"\n                />\n                <Input\n                  label=\"Confirm Password*\"\n                  {...propsToPass(confirmPassword, setConfirmPassword)}\n                  placeholder=\"Enter your email\"\n                  type=\"password\"\n                />\n              </div>\n              <Input\n                label=\"Skills*\"\n                {...propsToPass(skills, setSkills)}\n                placeholder=\"Enter comma separated skills\"\n                type=\"text\"\n              />\n              <div className=\"flex flex-col items-center justify-center\">\n                <button\n                  className=\"primary-button\"\n                  onClick={() => {\n                    if (\n                      !email.validator(email.value) &&\n                      !name.validator(name.value) &&\n                      !confirmPassword.validator(confirmPassword.value) &&\n                      !password.validator(password.value) &&\n                      !skills.validator(skills.value) &&\n                      (role === 0 || role === 1) &&\n                      password.value === confirmPassword.value\n                    ) {\n                      dispatch(\n                        performRegsiterationThunk({\n                          confirmPassword: confirmPassword.value,\n                          email: email.value,\n                          name: name.value,\n                          password: password.value,\n                          skills: skills.value,\n                          userRole: role,\n                        })\n                      )\n                        .then((data) => {\n                          history.push(RouteConstant.dashboard);\n                        })\n                        .catch((err) => {\n                          alert(err.message);\n                          setIsLoading(false);\n                        });\n                    } else {\n                      if (confirmPassword.value !== password.value) {\n                        setConfirmPassword((ps) => ({\n                          ...ps,\n                          errorMessage: \"Must be same as Password \",\n                          isTouched: true,\n                          isValid: false,\n                        }));\n                      }\n                    }\n                  }}\n                >\n                  Signup\n                </button>\n                <p className=\"my-3\">\n                  Have an account?\n                  <Link to={RouteConstant.login} className=\"primary\">\n                    Login\n                  </Link>\n                </p>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default RegisterScreen;\n","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\n\nfunction changePasswordThunk({\n  password,\n  confirmPassword,\n  token\n}: {\n  password: string;\n  confirmPassword: string;\n  token: string;\n}): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { data } = await Axios.post<\n      any,\n      AxiosResponse<ApiResponse<User>>\n    >(`${endPointBase}${EndpointConstants.auth.changePassword}`, {\n      password,\n      confirmPassword,\n      token,\n    });\n    if (!data.success ) {\n      throw new Error(data.message);\n    }\n    return data.data;\n  };\n}\nexport default changePasswordThunk;\n","import Axios, { AxiosResponse } from \"axios\";\nimport { EndpointConstants } from \"../../endpointsConstants\";\nimport { ApiResponse, CustomThunk } from \"../../type\";\n\nfunction verifyPasswordTokenThunk({ token }: { token: string }): CustomThunk<any> {\n  return async (dispatchThunk, getStates, { endPointBase }) => {\n    const { data } = await Axios.get<unknown, AxiosResponse<ApiResponse<User>>>(\n      `${endPointBase}${EndpointConstants.auth.verifyResetToken}/${token}`\n    );\n    if (!data.success ) {\n      throw new Error(data.message);\n    }\n    return data.data;\n  };\n}\nexport default verifyPasswordTokenThunk;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useLocation, useParams } from \"react-router\";\nimport { Action } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport Input from \"../../components/Input\";\nimport Layout from \"../../components/Layout\";\nimport { Title } from \"../../components/Title\";\nimport changePasswordThunk from \"../../redux-thunk/auth/thunk/changePasswordThunk\";\nimport verifyPasswordTokenThunk from \"../../redux-thunk/auth/thunk/verifyPasswordTokenThunk\";\nimport RouteConstant from \"../../utils/RouteConstant\";\n\nconst ResetPasswordScreen = () => {\n  const [password, setPassword] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) => (value.length > 0 ? \"\" : \"Is mandatory\"),\n  });\n  const [confirmPassword, setConfirmPassword] = useState<InputObject>({\n    value: \"\",\n    errorMessage: \"\",\n    isTouched: false,\n    isValid: true,\n    validator: (value: string) =>\n      value.length > 0 ? \"\" : \"Must be Same as Password\",\n  });\n  const dispatch = useDispatch<\n    ThunkDispatch<RootState, ExtraThunkArguments, Action<any>>\n  >();\n\n  const params: any = useParams();\n  const history = useHistory();\n  const [isVerified, setIsVerified] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    dispatch(\n      verifyPasswordTokenThunk({\n        token: params.token,\n      })\n    )\n      .then((data) => {\n        setIsValid(true);\n      })\n      .catch((err) => {\n        alert(err.message);\n        setIsValid(false);\n      })\n      .finally(() => {\n        setIsVerified(true);\n      });\n  }, [params, dispatch]);\n  const propsToPass = useCallback(\n    (\n      input: InputObject,\n      setter: React.Dispatch<React.SetStateAction<InputObject>>\n    ) => ({\n      value: input.value,\n      onChange: (value: string) => {\n        const errorMessage = input.validator(value);\n        setter((ps) => ({\n          ...ps,\n          value,\n          errorMessage: errorMessage,\n          isValid: !!errorMessage,\n          isTouched: true,\n        }));\n      },\n      isTouched: input.isTouched,\n      isValid: input.isValid,\n      errorMessage: input.errorMessage,\n    }),\n    []\n  );\n  if (!isVerified) {\n    return null;\n  }\n  return (\n    <Layout>\n      <div className=\"w-full flex py-60 justify-center items-center\">\n        <div className=\"max-w-xl w-full rounded-2xl p-8 bg-white shadow\">\n          {isValid ? (\n            <>\n              {\" \"}\n              <Title title=\"Reset Your Password\" />\n              <div className=\"my-3.5\" />\n              <p className=\"m-0 p-0 text-sm secondary\">\n                Enter your new password below.\n              </p>\n              <Input\n                label=\"New Password\"\n                {...propsToPass(password, setPassword)}\n                placeholder=\"Enter your email\"\n                type=\"password\"\n              />\n              <Input\n                label=\"Confirm New Password\"\n                {...propsToPass(confirmPassword, setConfirmPassword)}\n                placeholder=\"Enter your email\"\n                type=\"password\"\n              />\n              <button\n                className=\"primary-button\"\n                onClick={() => {\n                  if (\n                    !confirmPassword.validator(confirmPassword.value) &&\n                    !password.validator(password.value) &&\n                    confirmPassword.value === password.value\n                  ) {\n                    dispatch(\n                      changePasswordThunk({\n                        confirmPassword: confirmPassword.value,\n                        password: password.value,\n                        token: params.token,\n                      })\n                    )\n                      .then((data: any) => {\n                        history.push(RouteConstant.login);\n                      })\n                      .catch((error: any) => alert(error.message));\n                  } else {\n                    if (confirmPassword.value !== password.value) {\n                      setConfirmPassword((ps) => ({\n                        ...ps,\n                        errorMessage: \"Must be same as Password \",\n                        isTouched: true,\n                        isValid: false,\n                      }));\n                    }\n                  }\n                }}\n              >\n                Reset\n              </button>\n            </>\n          ) : (\n            <Title title=\"Invalid \" />\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ResetPasswordScreen;\n","import { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport RouteConstant from \"../utils/RouteConstant\";\nimport AppliedJobScreen from \"./AppliedJobs\";\nimport DashboardScreen from \"./Dashboard\";\nimport ForgotPasswordScreen from \"./ForgetPassword\";\nimport HomeScreen from \"./Home\";\nimport LoginScreen from \"./Login\";\nimport PostAJobScreen from \"./PostAJob\";\nimport RegisterScreen from \"./Register\";\nimport ResetPasswordScreen from \"./ResetPassword\";\n\nconst EntryPoint: FC<{}> = () => {\n  const { isLoggedIn, role } = useSelector(\n    (state: RootState) => state.appState\n  );\n  return (\n    <Switch>\n      <Route path={RouteConstant.home} exact strict component={HomeScreen} />\n      {isLoggedIn ? (\n        <>\n          <Route path={RouteConstant.dashboard} component={DashboardScreen} />\n          {role === \"recruiter\" && (\n            <Route path={RouteConstant.postAJob} component={PostAJobScreen} />\n          )}\n          {role === \"candidate\" && (\n            <Route\n              path={RouteConstant.appliedJobs}\n              component={AppliedJobScreen}\n            />\n          )}\n        </>\n      ) : (\n        <>\n          <Route path={RouteConstant.login} component={LoginScreen} />\n          <Route path={RouteConstant.register} component={RegisterScreen} />\n          <Route\n            path={RouteConstant.forgetPassword}\n            component={ForgotPasswordScreen}\n          />\n          <Route\n            path={RouteConstant.resetPassword + \"/:token\"}\n            component={ResetPasswordScreen}\n          />\n        </>\n      )}\n    </Switch>\n  );\n};\n\nexport default EntryPoint;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport store from \"./redux\";\nimport EntryPoint from \"./screens\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <EntryPoint />\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardShadow\":\"jobcard_cardShadow__1oHrK\",\"title\":\"jobcard_title__2y5MB\"};"],"sourceRoot":""}